<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <style>

        html, body, div, span, applet, object, iframe,
        blockquote, pre,
        a, abbr, acronym, address, big, cite, code,
        del, dfn, em, img, ins, kbd, q, s, samp,
        small, strike, strong, sub, sup, tt, var,
        b, u, i, center,
        dl, dt, dd, ol, ul, li,
        fieldset, form, label, legend,
        table, caption, tbody, tfoot, thead, tr, th, td,
        article, aside, canvas, details, embed,
        figure, figcaption, footer, header, hgroup,
        menu, nav, output, ruby, section, summary,
        time, mark, audio, video {
            margin: 0;
            padding: 0;
            border: 0;
            font-size: 100%;
            vertical-align: baseline;
        }

        /* Estilos para a barra de navegação */
        .html{
            width: 100%;
            height: 100%;
        }

        .navbar {
            background-color: #333;
            overflow: hidden;
        }

        .navbar a {
            float: left;
            display: block;
            color: white;
            text-align: center;
            padding: 14px 20px;
            text-decoration: none;
        }

        /* Estilos para os links da barra de navegação */
        .navbar a:hover {
            background-color: #ddd;
            color: black;
        }

        /* Estilos para a página principal */
        .content {
            padding: 20px;
        }

        #objetoForm{
            background-color: #535353;
            color: white;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: center;
            align-content: center;
            padding: 50px;
        }

        #objetoBox{
            background-color: #333;
            border-radius: 50px;
            padding: 50px;
            display: flex;
            flex-direction: column;
            flex-wrap: wrap;
            justify-content: center;
            align-content: center;
            font-weight: bold;
            margin-left: 25px;
            margin-right: 25px;
            text-align: center;
            align-items: center;
            justify-items: center;
        }

        .formGrow{
            flex-grow: 1;
        }

        body{
            margin-bottom: 100px;
        }

        footer {
            background-color: #333;
            color: white;
            padding: 10px 0;
            position: fixed;
            bottom: 0;
            width: 100%;
            text-align: center;
        }

        input{
            border-style: solid;
            background-image:none;
            background-color:transparent;
            box-shadow: black;
            color: white;
            padding: 10px;
            margin-top: 10px;
            margin-bottom: 10px;
            border-radius: 50px;
        }

        #distancia{
            margin-top: 20px;
        }

        button {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            color: #fff;
            background-color: #4CAF50;
            border: none;
            border-radius: 20px; /* Define a borda arredondada */
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            transition: background-color 0.3s;
        }

        button:hover{
            background-color: #2e6c31;
        }

        .POST{
            background-color: #eec635;
        }

        .POST:hover{
            background-color: #ab8f24;
        }

        .DELETE{
            background-color: #ff2e2e;
            margin-left: 10px;
        }

        .DELETE:hover{
            background-color: #c42020;
        }

        #coluna{
            display: flex;
            flex-direction: row;
            justify-items: center;
            align-items: center;
            justify-content: center;
            align-content: center;
        }

        .flexInput{
            display: grid;
            grid-template-columns: auto;
            grid-template-rows: auto;
            justify-items: center;
            align-items: start;
            justify-content: start;
            align-content: start;
        }

        #modeloGrid{
            grid-column-start: 0;
            grid-column-end: 1;
            display: flex;
            flex-direction: column;
            margin-right: 10px;
        }

        #modelo2Grid{
            grid-column-start: 1;
            grid-column-end: 2;
            display: flex;
            flex-direction: column;
        }

        #modeloGrid3{
            grid-column-start: 0;
            grid-column-end: 1;
            display: flex;
            justify-content: center;
            align-content: center;
            justify-items: center;
            align-items: center;
            align-self: center;
            justify-self: center;
            place-self: center;
            flex-direction: column;
        }

        .flex{
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr;
            grid-template-rows: auto;
        }

        .quadrado {
            width: 100%;
            background-color: #f0f0f0;
            border: 1px solid #ccc;
            margin-bottom: 10px; /* Espaçamento entre os quadrados */
            margin-right: 20px;
            padding: 25px;
            box-sizing: border-box;
        }

        .titulo {
            font-weight: bold;
        }

        h2{
            font-weight: normal;
            width: 50%;
        }

        .central{
            display: flex;
            justify-content: center;
            align-content: center;;
        }

    </style>
</head>
<body>

<!-- Barra de Navegação -->
<div class="navbar">
    <a href="/" class="active">Home</a>
    <a href="/relacao1_1.mustache">Relação 1 para 1</a>
    <a href="/relacao1_x.mustache">Relação 1 para X</a>
</div>

<div id="objetoForm">
    <div id="objetoBox">
        <h1>Formulário Carro</h1>
        <!-- Campo de entrada para ID -->
        <div class="formGrow">
            <label for="idCarro">ID:</label><br>
            <input type="text" id="idCarro" name="idCarro"><br>

            <div id="coluna">
                <button type="submit" id="adicionarEditar" onclick="pegarCarro()">Get</button><br>
                <button class="DELETE" type="submit" id="deletar" onclick="deletarCarro()">Deletar</button>
            </div>
        </div>
        <div class="formGrow flexInput" id="distancia">
            <!-- Campos de entrada para os atributos do objeto -->
            <div id="modeloGrid">
                <label for="modelo" id="modeloGrid">Modelo:</label>
                <input type="text" id="modelo" name="modelo">
            </div>

            <div id="modelo2Grid">
                <label for="marca">Marca:</label>
                <input type="text" id="marca" name="marca">
            </div>

            <div id="modeloGrid">
                <label for="anoFabricacaoAdicionar">Ano de Fabricação:</label>
                <input type="number" id="anoFabricacaoAdicionar" name="anoFabricacao">
            </div>

            <div id="modelo2Grid">
                <label for="idPlacaAdicionar">ID da Placa:</label>
                <input type="number" id="idPlacaAdicionar" name="idPlaca">
            </div>
        </div>
        <!-- Botões para adicionar/editar e deletar -->
        <button class="POST" type="submit" id="adicionar" onclick="adicionarCarro()">Adicionar/Editar</button>
    </div>
    <div id="objetoBox">
        <h1>Formulário Placa de Carro</h1>
        <!-- Campo de entrada para ID -->
        <div class="formGrow">
            <label for="idPlaca">ID:</label><br>
            <input type="text" id="idPlaca" name="idPlaca"><br>

            <div id="coluna">
                <button class="" type="submit" onclick="pegarPlacaCarro()" id="adicionarEditarPlaca">Get</button><br>
                <button class="DELETE" type="submit" onclick="deletarPlacaCarro()" id="deletarPlaca">Deletar</button>
            </div>
        </div>
        <div class="formGrow flexInput" id="distanciaPlaca">
            <!-- Campos de entrada para os atributos do objeto -->
            <div id="modeloGrid">
                <label for="estado">Estado:</label>
                <input type="text" id="estado" name="estado">
            </div>

            <div id="modelo2Grid">
                <label for="numero">Número:</label>
                <input type="text" id="numero" name="numero">
            </div>
        </div>
        <div id="modeloGrid3">
            <label for="idCarro">ID do Carro:</label>
            <input type="number" id="idCarro2" name="idCarro">
        </div>
        <!-- Botões para adicionar/editar e deletar -->
        <button class="POST" type="submit" onclick="adicionarPlacaCarro()">Adicionar/Editar</button>
    </div>
</div>

<!-- Seção Sobre Mim -->
<div class="content">
    <div class="central">
        <h2>Carros e Placas de carros são relacionados um para um, ambos só possuem uma instância do outro
        .Nesse formulário é possível adicionar placas à carros que ainda não tem, remover placas de carro e pegar dados
        que estão associados à placas. Assim como em carros, atualizar carros com seus dados baseado no id, deletar e pegar</h2>
    </div>
    <h1>Carros</h1>
    <ul class="flex">
        {{#objetos}}
                {{#marca}}
                    <li class="quadrado titulo">
                        {{#idCarro}}ID: {{.}}<br>{{/idCarro}}
                        {{#modelo}}Modelo: {{.}}<br>{{/modelo}}
                        {{#marca}}Marca: {{.}}<br>{{/marca}}
                        {{#anoFabricacao}}Ano de Fabricação: {{.}}<br>{{/anoFabricacao}}
                        {{#idPlaca}}ID da Placa: {{.}}<br>{{/idPlaca}}
                    </li>
                {{/marca}}
        {{/objetos}}
    </ul>
</div>

<!-- Seção Sobre Mim -->
<div class="content">
    <h1>Placas de Carro</h1>
    <ul class="flex">
        {{#objetos}}
                {{#estado}}
                    <li class="quadrado titulo">
                        {{#idPlaca}}ID da Placa: {{.}}<br>{{/idPlaca}}
                        {{#estado}}Estado: {{.}}<br>{{/estado}}
                        {{#numero}}Número: {{.}}<br>{{/numero}}
                        {{#idCarro}}ID do Carro Associado: {{.}}<br>{{/idCarro}}
                        {{#idPlaca}}ID da Placa: {{.}}<br>{{/idPlaca}}
                    </li>
                {{/estado}}
        {{/objetos}}
    </ul>
</div>

<!-- Footer -->
<footer>
    <p>Desenvolvido por Fernando Araújo - 2024 <a href="https://github.com/Fernando-infnet/AT">github</a></p>
</footer>
</body>

    <script>
        function adicionarCarro() {
            var idCarro = document.getElementById("idCarro").value;
            var modelo = document.getElementById("modelo").value;
            var marca = document.getElementById("marca").value;
            var anoFabricacao = document.getElementById("anoFabricacaoAdicionar").value;
            var idPlaca = document.getElementById("idPlacaAdicionar").value;

            var carro;

            if (idPlaca == null || idPlaca == ""){
                carro = {
                    idCarro: idCarro,
                    modelo: modelo,
                    marca: marca,
                    anoFabricacao: anoFabricacao,
                };
            }
            else{
                carro = {
                    idCarro: idCarro,
                    modelo: modelo,
                    marca: marca,
                    anoFabricacao: anoFabricacao,
                    idPlaca: idPlaca
                };
            }


            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/relacao1_1.mustache/carro");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onload = function() {
                if (xhr.status === 201) {
                    alert("Carro adicionado com sucesso!");
                    window.location.reload();
                } else {
                    alert("Erro ao adicionar carro. Status: " + xhr.status);
                }
            };
            xhr.send(JSON.stringify(carro));

            console.log(JSON.stringify(carro))
        }

        function pegarCarro() {
            var idCarro = document.getElementById("idCarro").value;
            console.log(JSON.stringify(idCarro))
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "/relacao1_1.mustache/carro/" + idCarro);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onload = function() {
                if (xhr.status === 200) {
                    var carro = JSON.parse(xhr.responseText);
                    // Faça o que desejar com o objeto "carro" obtido
                    console.log("Carro obtido:", carro);
                    window.location.href = "/relacao1_1.mustache/carro/" + idCarro;
                } else if (xhr.status === 404) {
                    alert("Carro não encontrado.");
                } else {
                    alert("Erro ao obter carro. Status: " + xhr.status);
                }
            };
            xhr.send();
        }

        function deletarCarro() {
            var idCarro = document.getElementById("idCarro").value;
            console.log(JSON.stringify(idCarro))
            var xhr = new XMLHttpRequest();
            xhr.open("DELETE", "/relacao1_1.mustache/carro/" + idCarro);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onload = function() {
                if (xhr.status === 200) {
                    console.log("Carro obtido:", carro);
                    window.location.reload();
                } else if (xhr.status === 404) {
                    alert("Carro não encontrado.");
                } else {
                    alert("Erro ao obter carro. Status: " + xhr.status);
                }
            };
            xhr.send();
        }

        //////////////////////////////////////////////////////////////////////////////

        function adicionarPlacaCarro() {
            var idPlaca = document.getElementById("idPlaca").value;
            var estado = document.getElementById("estado").value;
            var numero = document.getElementById("numero").value;
            var idCarro = document.getElementById("idCarro2").value;


            var placaCarro = {
                idPlaca: idPlaca,
                estado: estado,
                numero: numero,
                idCarro: idCarro
            };

            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/relacao1_1.mustache/placa-carro");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onload = function() {
                if (xhr.status === 201) {
                    alert("Placa de carro adicionada com sucesso!");
                    window.location.reload();
                } else {
                    alert("Erro ao adicionar placa de carro. Status: " + xhr.status);
                }
            };
            xhr.send(JSON.stringify(placaCarro));
            console.log(JSON.stringify(placaCarro))
        }

        function pegarPlacaCarro() {
            var idPlaca = document.getElementById("idPlaca").value;

            var xhr = new XMLHttpRequest();
            xhr.open("GET", "/relacao1_1.mustache/placa-carro/" + idPlaca);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onload = function() {
                if (xhr.status === 200) {
                    var placaCarro = JSON.parse(xhr.responseText);
                    console.log("Placa de carro obtida:", placaCarro);
                    window.location.href = "/relacao1_1.mustache/placa-carro/" + idPlaca;
                } else if (xhr.status === 404) {
                    alert("Placa de carro não encontrada.");
                } else {
                    alert("Erro ao obter placa de carro. Status: " + xhr.status);
                }
            };
            xhr.send();
        }

        function deletarPlacaCarro() {
            var idPlaca = document.getElementById("idPlaca").value;

            var xhr = new XMLHttpRequest();
            xhr.open("DELETE", "/relacao1_1.mustache/placa-carro/" + idPlaca);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onload = function() {
                if (xhr.status === 200) {
                    alert("Placa de carro removida com sucesso!");
                    window.location.reload();
                } else if (xhr.status === 404) {
                    alert("Placa de carro não encontrada.");
                } else {
                    alert("Erro ao remover placa de carro. Status: " + xhr.status);
                }
            };
            xhr.send();
        }

    </script>
</html>