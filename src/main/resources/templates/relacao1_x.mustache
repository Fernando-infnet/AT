<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <style>

        html, body, div, span, applet, object, iframe,
        blockquote, pre,
        a, abbr, acronym, address, big, cite, code,
        del, dfn, em, img, ins, kbd, q, s, samp,
        small, strike, strong, sub, sup, tt, var,
        b, u, i, center,
        dl, dt, dd, ol, ul, li,
        fieldset, form, label, legend,
        table, caption, tbody, tfoot, thead, tr, th, td,
        article, aside, canvas, details, embed,
        figure, figcaption, footer, header, hgroup,
        menu, nav, output, ruby, section, summary,
        time, mark, audio, video {
            margin: 0;
            padding: 0;
            border: 0;
            font-size: 100%;
            vertical-align: baseline;
        }

        /* Estilos para a barra de navegação */
        .html{
            width: 100%;
            height: 100%;
        }

        .navbar {
            background-color: #333;
            overflow: hidden;
        }

        .navbar a {
            float: left;
            display: block;
            color: white;
            text-align: center;
            padding: 14px 20px;
            text-decoration: none;
        }

        /* Estilos para os links da barra de navegação */
        .navbar a:hover {
            background-color: #ddd;
            color: black;
        }

        /* Estilos para a página principal */
        .content {
            padding: 20px;
        }

        #objetoForm{
            background-color: #535353;
            color: white;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: center;
            align-content: center;
            padding: 50px;
        }

        #objetoBox{
            background-color: #333;
            border-radius: 50px;
            padding: 50px;
            display: flex;
            flex-direction: column;
            flex-wrap: wrap;
            justify-content: center;
            align-content: center;
            font-weight: bold;
            margin-left: 25px;
            margin-right: 25px;
            text-align: center;
            align-items: center;
            justify-items: center;
        }

        .formGrow{
            flex-grow: 1;
        }

        body{
            margin-bottom: 100px;
        }

        footer {
            background-color: #333;
            color: white;
            padding: 10px 0;
            position: fixed;
            bottom: 0;
            width: 100%;
            text-align: center;
        }

        input{
            border-style: solid;
            background-image:none;
            background-color:transparent;
            box-shadow: black;
            color: white;
            padding: 10px;
            margin-top: 10px;
            margin-bottom: 10px;
            border-radius: 50px;
        }

        #distancia{
            margin-top: 20px;
        }

        button {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            color: #fff;
            background-color: #4CAF50;
            border: none;
            border-radius: 20px; /* Define a borda arredondada */
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            transition: background-color 0.3s;
        }

        h2{
            font-weight: normal;
            width: 50%;
        }

        .central{
            display: flex;
            justify-content: center;
            align-content: center;;
        }

        button:hover{
            background-color: #2e6c31;
        }

        .POST{
            background-color: #eec635;
        }

        .POST:hover{
            background-color: #ab8f24;
        }

        .DELETE{
            background-color: #ff2e2e;
            margin-left: 10px;
        }

        .DELETE:hover{
            background-color: #c42020;
        }

        #coluna{
            display: flex;
            flex-direction: row;
            justify-items: center;
            align-items: center;
            justify-content: center;
            align-content: center;
        }

        .flexInput{
            display: grid;
            grid-template-columns: auto;
            grid-template-rows: auto;
            justify-items: center;
            align-items: start;
            justify-content: center;
            align-content: start;
        }

        #modeloGrid{
            grid-column-start: 0;
            grid-column-end: 1;
            display: flex;
            flex-direction: column;
            margin-right: 10px;
        }

        #modelo2Grid{
            grid-column-start: 1;
            grid-column-end: 2;
            display: flex;
            flex-direction: column;
        }

        #modeloGrid3{
            grid-column-start: 0;
            grid-column-end: 1;
            display: flex;
            justify-content: center;
            align-content: center;
            justify-items: center;
            align-items: center;
            align-self: center;
            justify-self: center;
            place-self: center;
            flex-direction: column;
        }

        .flex{
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr;
            grid-template-rows: auto;
        }

        .quadrado {
            width: 100%;
            background-color: #f0f0f0;
            border: 1px solid #ccc;
            margin-bottom: 10px; /* Espaçamento entre os quadrados */
            margin-right: 20px;
            padding: 25px;
            box-sizing: border-box;
        }

        .titulo {
            font-weight: bold;
        }

    </style>
</head>
<body>

<!-- Barra de Navegação -->
<div class="navbar">
    <a href="/" class="active">Home</a>
    <a href="/relacao1_1.mustache">Relação 1 para 1</a>
    <a href="/relacao1_x.mustache">Relação 1 para X</a>
</div>

<div id="objetoForm">
        <div id="objetoBox">
            <h1>Formulário Livro</h1>
            <!-- Campo de entrada para ID -->
            <div class="formGrow">
                <label for="livroID">ID:</label><br>
                <input type="number" id="livroID" name="livroID"><br>

                <div id="coluna">
                    <button type="submit" id="adicionarEditar" onclick="pegarLivro()">Get</button><br>
                    <button class="DELETE" type="submit" id="deletar" onclick="deletarLivro()">Deletar</button>
                </div>
            </div>
            <div class="formGrow flexInput" id="distancia">
                <!-- Campos de entrada para os atributos do objeto -->
                <div id="modeloGrid">
                    <label for="nomeLivro" id="modeloGrid">Nome:</label>
                    <input type="text" id="nomeLivro" name="nomeLivro">
                </div>

                <div id="modelo2Grid">
                    <label for="autorID">ID do Autor:</label>
                    <input type="number" id="autorID" name="autorID">
                </div>
            </div>
            <!-- Botões para adicionar/editar e deletar -->
            <button class="POST" type="submit" id="adicionar" onclick="adicionarLivro()">Adicionar/Editar</button>
        </div>
        <div id="objetoBox">
            <h1>Formulário Autor</h1>
            <!-- Campo de entrada para ID -->
            <div class="formGrow">
                <label for="autorID">ID:</label><br>
                <input type="number" id="autorIDs" name="autorID"><br>

                <div id="coluna">
                    <button class="" type="submit" onclick="pegarAutor()" id="adicionarEditarPlaca">Get</button><br>
                    <button class="DELETE" type="submit" onclick="deletarAutor()" id="deletarPlaca">Deletar</button>
                </div>
            </div>
            <div class="formGrow flexInput" id="distanciaPlaca">
                <div id="modeloGrid3">
                    <label for="nome">Nome:</label>
                    <input type="text" id="nome" name="nome">
                </div>
                    <br>
                <!-- Botões para adicionar/editar e deletar -->
                <button class="POST" type="submit" onclick="adicionarAutor()">Adicionar/Editar</button>
            </div>
        </div>
    </div>

<!-- Seção de Livros -->
<div class="content">
    <div class="central">
        <h2>Livros e Autores possuem uma relação um para muitos, ou seja, nesse caso, um
        autor pertence à vários livros, e um livro sempre pertence à um autor. Nesse código,
        podemos criar instâncias de ambas as classes e fazer com que seja possível resgatar
        os dados, alterações feitas em livro afetam autor, e autor afeta livro</h2>
    </div>
    <h1>Livros</h1>
    <ul class="flex">
        {{#livros}}
            <li class="quadrado titulo">
                {{#livroID}}ID: {{.}}<br>{{/livroID}}
                {{#nomeLivro}}Título: {{.}}<br>{{/nomeLivro}}
                {{#autorID}}ID do Autor: {{.}}<br>{{/autorID}}
            </li>
        {{/livros}}
    </ul>
</div>

<!-- Seção de Autores -->
<div class="content">
    <h1>Autores</h1>
    <ul class="flex">
        {{#autores}}
            <li class="quadrado titulo">
                {{#autorID}}ID: {{.}}<br>{{/autorID}}
                {{#nome}}Nome: {{.}}<br>{{/nome}}
                {{#livros}}Livros: {{.}}<br>{{/livros}}
            </li>
        {{/autores}}
    </ul>
</div>

<!-- Footer -->
<footer>
    <p>Desenvolvido por Fernando Araújo - 2024 <a href="https://github.com/Fernando-infnet/AT">github</a></p>
</footer>
</body>

<script>
    function adicionarLivro() {
        var livroID = document.getElementById("livroID").value;
        var nomeLivro = document.getElementById("nomeLivro").value;
        var autorID = document.getElementById("autorID").value;

        var livro = {
            livroID: livroID,
            nomeLivro: nomeLivro,
            autorID: autorID
        };

        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/relacao1_x.mustache/livro");
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onload = function() {
            if (xhr.status === 201) {
                alert("Livro adicionado com sucesso!");
                window.location.reload();
            } else {
                alert("Erro ao adicionar livro. Status: " + xhr.status);
            }
        };
        xhr.send(JSON.stringify(livro));

        console.log(JSON.stringify(livro))
    }

    function pegarLivro() {
        var livroID = document.getElementById("livroID").value;
        console.log(JSON.stringify(livroID))
        var xhr = new XMLHttpRequest();
        xhr.open("GET", "/relacao1_x.mustache/livro/" + livroID);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onload = function() {
            if (xhr.status === 200) {
                var livro = JSON.parse(xhr.responseText);
                // Faça o que desejar com o objeto "livro" obtido
                console.log("Livro obtido:", livro);
                window.location.href = "/relacao1_x.mustache/livro/" + livroID;
            } else if (xhr.status === 404) {
                alert("Livro não encontrado.");
            } else {
                alert("Erro ao obter livro. Status: " + xhr.status);
            }
        };
        xhr.send();
    }

    function deletarLivro() {
        var livroID = document.getElementById("livroID").value;
        console.log(JSON.stringify(livroID))
        var xhr = new XMLHttpRequest();
        xhr.open("DELETE", "/relacao1_x.mustache/livro/" + livroID);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onload = function() {
            if (xhr.status === 200) {
                window.location.reload();
            } else if (xhr.status === 404) {
                alert("Livro não encontrado.");
            } else {
                alert("Erro ao deletar livro. Status: " + xhr.status);
            }
        };
        xhr.send();
    }

    //////////////////////////////////////////////////////////////////////////////

    function adicionarAutor() {
        var autorID = document.getElementById("autorIDs").value;
        var nome = document.getElementById("nome").value;

        var autor = {
            autorID: autorID,
            nome: nome,
        };

        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/relacao1_x.mustache/autor");
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onload = function() {
            if (xhr.status === 201) {
                alert("Autor adicionada com sucesso!");
                window.location.reload();
            } else {
                alert("Erro ao adicionar autor. Status: " + xhr.status);
            }
        };
        xhr.send(JSON.stringify(autor));
        console.log(JSON.stringify(autor))
    }

    function pegarAutor() {
        var autorID = document.getElementById("autorIDs").value;

        var xhr = new XMLHttpRequest();
        xhr.open("GET", "/relacao1_x.mustache/autor/" + autorID);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onload = function() {
            if (xhr.status === 200) {
                var autor = JSON.parse(xhr.responseText);
                console.log("Autor Obtido:", autor);
                window.location.href = "/relacao1_x.mustache/autor/" + autorID;
            } else if (xhr.status === 404) {
                alert("Autor não encontrado.");
            } else {
                alert("Erro ao obter autor. Status: " + xhr.status);
            }
        };
        xhr.send();
    }

    function deletarAutor() {
        var autorID = document.getElementById("autorIDs").value;

        var xhr = new XMLHttpRequest();
        xhr.open("DELETE", "/relacao1_x.mustache/autor/" + autorID);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onload = function() {
            if (xhr.status === 200) {
                alert("Autor removido com sucesso!");
                window.location.reload();
            } else if (xhr.status === 404) {
                alert("Autor não encontrado.");
            } else {
                alert("Erro ao remover Autor. Status: " + xhr.status);
            }
        };
        xhr.send();
    }

</script>
</html>